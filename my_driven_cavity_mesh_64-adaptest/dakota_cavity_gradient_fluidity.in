# Usage:
#   dakota -i xxx.in -o run.out > stdout.out

environment
#    graphics
    tabular_graphics_data
        tabular_graphics_file = 'table_out.dat'

#method,
##	npsol_sqp
## if NPSOL is not available, comment the above and try the following instead:
#        conmin_frcg
#        #conmin_mfd
#
#		max_iterations = 100
#		convergence_tolerance = 1e-7
#		max_function_evaluations = 50
#
#        linear_inequality_constraint_matrix 1
#        linear_inequality_lower_bounds -2
#        linear_inequality_upper_bounds 2.8
#
#
#
#	#linear_inequality_constraint_matrix 0 1 1 0
#        #linear_inequality_lower_bounds -2 -2
#        #linear_inequality_upper_bounds  1.5 1


method
  multidim_parameter_study
        partitions = 3 3 3
model
  single


variables,
	continuous_design = 3
	  cdv_initial_point    0.1 0.1 -1.8
	  cdv_lower_bounds     0.005 0.005 -2.0
	  cdv_upper_bounds     0.1 0.1 3.0
	  cdv_descriptor       'vax' 'vay' 'x1'



interface,
	fork
#	  asynchronous
#	  evaluation_concurrency = 4
	  analysis_driver = 'driven_cavity_fluidity.py'
	  parameters_file = 'params.in'
	  results_file    = 'results.out'
	  work_directory directory_tag
	  #copy_files = 'templatedir/*'

# uncomment to leave params.in and results.out files in work_dir subdirectories
 	  named 'workdir' file_save  directory_save
	  aprepro

# when using conmin_frcg (above) with analytic_gradients (below),
# need to turn off the active set vector as rosenbrock_bb does not parse it.
## 	  deactivate active_set_vector

responses,
	num_objective_functions = 1
 	numerical_gradients

		method_source dakota
		interval_type forward

	 #fd_gradient_step_size = .000001
	  fd_gradient_step_size =  1.e-5

# to instead use analytic gradients returned by the simulator comment the
# preceding two lines and uncomment the following:
##	analytic_gradients

	no_hessians

	sense 'max'
